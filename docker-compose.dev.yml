version: '3.1'
services:
  db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: oldVlZKeoyVpJzHPyIhi
    volumes:
      - /data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 5006:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: oldVlZKeoyVpJzHPyIhi
      ME_CONFIG_MONGODB_URL: ${DB_URI}
    depends_on:
      - db

  employee-man:
    build:
      context: ./employee-management
      dockerfile: ./Dockerfile.dev
    environment:
      - DB_URI=${DB_URI}
    volumes:
      - /app/node_modules
      - ./employee-management:/app
    ports:
      - 5005:5005
    depends_on:
      - db

  fleet-man:
    build:
      context: ./fleet-management
      dockerfile: ./Dockerfile.dev
    environment:
      - DB_URI=${DB_URI}
    volumes:
      - /app/node_modules
      - ./fleet-management:/app
    ports:
      - 5004:5004
    depends_on:
      - db

  booking:
    build:
      context: ./booking-system
      dockerfile: ./Dockerfile.dev
    environment:
      - DB_URI=${DB_URI}
    volumes:
      - /app/node_modules
      - ./booking-system:/app
    ports:
      - 5003:5003
    depends_on:
      - db

  feedback:
    build:
      context: ./feedback-system
      dockerfile: ./Dockerfile.dev
    environment:
      - DB_URI=${DB_URI}
    ports:
      - 5002:5002
    volumes:
      - /app/node_modules
      - ./feedback-system:/app
    depends_on:
      - db

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: ./Dockerfile.dev
    environment:
      - DB_URI=${DB_URI}
    volumes:
      - /app/node_modules
      - ./api-gateway:/app
    ports:
      - 5000:5000
    restart: always
    depends_on:
      - db

  admin-ui:
    build:
      context: ./admin-ui
      dockerfile: ./Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./admin-ui:/app
    ports:
      - 3005:3005
    depends_on:
      - db
      - api-gateway

  webapp:
    build:
      context: ./webapp
      dockerfile: ./Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./webapp:/app
    ports:
      - 3000:3000
    depends_on:
      - db
      - api-gateway